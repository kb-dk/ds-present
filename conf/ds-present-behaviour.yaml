#
# This config contains behaviour data: Thread allocation, allowed fields for lookup, limits for arguments etc.
#
# The behaviour config is normally controlled by developers and is part of the code repository.
# Sensitive information such as machine names and user/passwords should not be part of this config.
#
# It will be automatically merged with the environment config when accessed through the
# application config system.
#
#
config:
  # List of backing storages. This information overridden in ds-present-environment.yaml
  storages:
    # There can be multiple maching storages. The outer YAML key is used as the ID for the storage.
    - main:
        # If default is true, this will be the default storage for collections.
        # The default storage choice can be overridden in a collection with the 'storage' property
        default: true
        # Backends contains a list of one or more implementations and their configuration, with the primary key being
        # the implementation (aka type) of the backend
        backends:
          # Available backends are
          # - ds-storage: 
          #    host: 'localhost'
          #    port: 8080
          #    basepath: 'ds-storage/v1/'
          #    scheme: 'http'
          -
          - ds-storage:
              host: 'localhost'
              port: 8080
              basepath: 'ds-storage/v1/'
              scheme: 'http'
        # If there is more that one backend implementation, the property 'order' controls how they are queried:
        # * parallel:   All backends are queried in parallel. Whoever answers with a record first wins.
        # * sequential: All backends are queried one at a time in the order in this configuration.
        #               When a backend responds with a record, itertaion is stopped and the record is returned
        # Optional, default value is 'sequential'
        order: sequential
    - special:
        backends:
          - ds-storage:
              host: 'example.com'
              port: 1234
              basepath: 'some-other-ds-storage/v1/'
              scheme: 'https'
    - test:
        # Order is used when multiple backends are specified. Possible values are:
        # sequential: The backends are queried one after each other in the same order as stated in the configuration,
        #             until one of them delivers the record or there are no more backends.
        # parallel:   The backends are queried in parallel. In case of multiple matches, it is undefined which record
        #             will be returned.
        order: sequential
        backends:
          # If multiple storages are defined, they are all queried. The property order controls how
          - folder:
              root: '/use/only/for/test/purposes'
          - folder:
              root: '/some/other/path'

  # The collections available for this instance of ds-present 
  collections:
    # General note: All collections are expected to support at least the views raw, mods, jsonld and solrjson.
    # If any of those are not supported, the transformer 'fail' should be used with a telling message.

    # Straight forward collection with the core format being MODS
    - dsfl: # ds-present internal
        prefix: 'images-dsfl' # The prefix to match on incoming IDs
        description: 'Images from the collection Danmark Set Fra Luften'
        # Different views on the material. Note that all collections has at least mods, jsonld and solrjson as views
        views:
          - raw:
              mime: 'text/plain'
              transformers:
                - identity:
          - mods:
              mime: 'application/xml'
              transformers:
                - identity: # No transformation steps as mods is the core format for images-dsfl
          - jsonld:
              mime: 'application/json'
              transformers:
                - xslt:
                    stylesheet: 'xslt/mods2jsonld.xsl'
          - solrjson:
              mime: 'application/json'
              transformers:
                - xslt:
                    stylesheet: 'xslt/mods2solr.xsl'

    # Internal format is TEI 
    - manuscripts:
        prefix: 'text-manuscripts'
        description: 'Multi page manuscripts'
        views:
          - raw:
              mime: 'text/plain'
              transformers:
                - identity:
          - mods:
              mime: 'application/xml'
              transformers:
                - xslt:
                    stylesheet: 'path/to/xslts/tei2mods.xsl'
          - jsonld:
              mime: 'application/json'
              transformers:
                # Chained re-use of existing XSLTs 
                - xslt:
                    stylesheet: 'path/to/xslts/tei2mods.xsl'
                - xslt:
                    stylesheet: 'path/to/xslts/mods2jsonld.xsl'
          - solrjson:
              mime: 'application/json'
              transformers:
                - xslt:
                    stylesheet: 'path/to/xslts/tei2mods.xsl'
                - xslt:
                    stylesheet: 'path/to/xslts/mods2solr.xsl'
          - alto:
              mime: 'application/xml'
              transformers:
                - xslt:
                    stylesheet: 'path/to/xslts/tei2mods.xsl'
                # Demonstration of special handling by a Java class. Maybe this is overengineering?
                - java:
                    class: 'dk.db.present.transformers.RetrieveALTOForMODS.class'
                    javaconfig: # This configuration is given to the constructor for RetrieveALTOForMODS
                      - alto_source: 'http://localhost:8765/altoservice/v2'

    # Some fantasy source where the metadata is delivered in something neither XML nor JSON
    - problemchild:
        prefix: 'strange-times'
        storage: 'special'
        description: 'Images from the site Strange Times. NOTE: MODS is not available for this source'
        views:
          # No raw defined
          - mods:
              mime: 'application/xml'
              transformers:
                - fail:
                    message: 'MODS not supported for material from Strange Times'
          - jsonld:
              mime: 'application/json'
              transformers:
                - java:
                    class: 'dk.db.present.transformers.ST2JSON_LD.class'
          - solrjson:
              mime: 'application/json'
              transformers:
                - java:
                    class: 'dk.db.present.transformers.ST2Solr.class'

