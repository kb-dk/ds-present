#
# This contains behaviour data: Thread allocation, allowed fields for lookup, limits for arguments etc.
#
# The behaviour config is normally controlled by developers and is part of the code repository.
# Sensitive information such as machine names and user/passwords should not be part of this config.
#
# It will be automatically merged with the environment config when accessed through the
# application config system.
#
#


# Image server URLs are injected into transformations.
# These should be overridden in environment specific config files for all environments, meaning local test,
# shared devel, stage and production
#
# Sample override:
#

# imageservers:
#   devel:
#     url: "https://example.com/devel/iipimage"
#     default: true
#
# Note: The server marked with "default: true" is used in the base configuration ds-present-kb-collections.yaml
imageservers:
  # Note: The servers are in a list to ensure the full list of servers can be fully overwritten in subsequent configs
  - example:
      url: "https://example.com"
      default: true 
  - invalid:
      url: "invalid://url"
      # The default is commented out here to force defining a default for a real imageserver in the local, devel or prod config
      #default: true

# Values in the openapi part of the configuration are expected to be overwritten with the actual values used for deployment.
# These values are used to populate the OpenAPI specification without redeploying the service. They can be served by using the syntax ${config:yaml.path}.
openapi:
  serverurl: http://localhost:9073/ds-present/v1

# The oldimageserver is special as that is used for imageIdentifier rather that bitmap delivery
oldimageserver:
  url: "http://kb-images.kb.dk"

# Used for verifying access to metadata https://github.com/kb-dk/ds-license
# If allowall is set to true (default is false), all access is granted. Use only for devel + stage
licensemodule:
  url: http://localhost:9076/ds-license/v1
  allowall: false

# List of backing storages. This information should be overridden in ds-present-environment.yaml

# The storages defined in this file are
# * ds-storage, expecting https://github.com/kb-dk/ds-storage/ to be running locally with the default port
# * folder, serving sample files
storages:
  # There can be multiple defined storages. The outer YAML key is used as the ID for the storage.
  - main:
      # If default is true, this will be the default storage for collections.
      # The default storage choice can be overridden in a collection with the 'storage' property
      default: true
      # Backends contains a list of one or more implementations and their configuration, with the primary key being
      # the implementation (aka type) of the backend
      #
      # Available backends are
      # ds-storage: A local instance of https://github.com/kb-dk/ds-storage/
      # folder:     Local files under the stated folder. Use only for test as the implementation in unsecure
      backends:
        # The ds-storage backend connects to a running https://github.com/kb-dk/ds-storage/ instance
        - ds-storage:
            # The URL for the DS storage service, complete with version. Mandatory
            # Sample: http://localhost:9072/ds-storage/v1/
            url: 'http://localhost:9072/ds-storage/v1/'

  - test:
      # If there is more that one backend implementation, the property 'order' controls how they are queried:
      # * parallel:   All backends are queried in parallel. Whoever answers with a record first wins.
      # * sequential: All backends are queried one at a time in the order in this configuration.
      #               When a backend responds with a record, itertaion is stopped and the record is returned
      # Optional, default value is 'sequential'
      order: sequential
      backends:
        # The folder backend expects content to be stored in a local folder. The ID is used as the file name.
        # WARNING: Insecure implementation (files outside of the folder can be read). Do not use for production!
        # The src/test/resources/xml/corpus contains a small sample corpus. this is only likely to work when
        # running with `mvn jetty:run` and even the we're unsure of the current folder, so we se up alternatives.
        - folder:
            root: 'src/test/resources/xml/corpus' # Expected
            # Whether or not remove ID-prefix (the part from the beginning to the first `:` (inclusive) of the ID)
            # from the ID when perforaing the lookup. Optional, default is true.
            prefix:
              strip: true
        - folder:
            root: '../src/test/resources/xml/corpus' # Maybe PWD is target/
        - folder:
            root: 'ds-present/src/test/resources/xml/corpus' # Maybe PWD is outsid eof the checkout (unlikely)

# Settings for handling export of multiple records
records:
  errorHandling:
    # If true, export is stopped if a transformation fails for any record
    # If false, failed records are logged and skipped
    # Default: true
    stop: true

# Settings for handling at the record level
record:
  id:
    # Pattern for acceptable record IDs. Must contain exactly 2 capturing group, the first being the origin prefix
    # and the second being the origin specific par of the ID
    # Mandatory. Suggested value: '([a-z0-9.]+):([a-zA-Z0-9:._-]+)', e.g. 'images.dsfl:Image1234:2_3-b'
    pattern: '([a-z0-9.]+):([a-zA-Z0-9:._-]+)'
origin:
  prefix:
    # Pattern for acceptable origin prefixes. This will practically always be a mirror of the first capturing
    # group for record.id.pattern.
    # Primarily used for verifying configuration.
    # Mandatory. Suggested value: '[a-z0-9.]+', e.g. 'images.dsfl'
    pattern: '[a-z0-9.]+'


# Configuration specific for DR rights calculation
dr:
  # Absolute paths to Excel sheets containing various information used to calculate all kinds of restrictions from DR.
  # This value needs to be changed to the correct placement of the files. The placeholder value is resolved from classpath
  # when the files have been injected from aegis. However, full paths can be specified as well.
  # Absolute paths to Excel sheets containing information used to calculate holdback periods from DR.
  holdback:
    purposeSheet: 'internal_test_files/dr_formaalstabeller_20240704.xlsx'
    holdbackSheet: 'internal_test_files/dr_holdbacktabel_20250305.xlsx'
  restrictionSheet: 'internal_test_files/dr_klausuleringsliste_20250304.xlsx'
  restrictedDsIdsSheet: 'internal_test_files/ds_id_klausuleringsliste_20250304.xlsx'
  # This number specifies which material gets indexed as own production and therefore gets viewable in the system.
  # value < 2000 = truly own production
  # value < 3000 = co production
  # value <= 3300 = some kind of enterprise production
  # values > 3300 = probably not DR productions
  maxAllowedProductionCode: 3300



# Origins are to be set in ds-present-kb-collections-yaml if possible, as that file overwrites the origins defined here
# The origins available for this instance of ds-present
#origins:
  # General note: All origins are expected to support at least the views raw, mods, jsonld and solrjson.
  # If any of those are not supported, the transformer 'fail' should be used with a telling message.

  # Straight forward origin with the core format being MODS
  # Uses the default storage, which connects to a running ds-storage instance
#  - remote: # ds-present internal
#      prefix: 'doms.radio' # The prefix to match on incoming IDs. Selectet to use ds-storage without any tweaks
#      description: 'Images from the collections at the Royal Danish Library'
    #   Different views on the material. Note that all origins has at least mods, jsonld and solrjson as views
#      views:
#        - raw:
#            mime: 'text/plain'
#            transformers:
#              - identity:
#        - MODS:
#            mime: 'application/xml'
#            transformers:
#             - identity: # No transformation steps as mods is the core format for images-dsfl
#        - JSON-LD:
#            mime: 'application/json'
#            transformers:
#              - xslt:
#                  stylesheet: 'xslt/mods2schemaorg.xsl'
#                  injections:
#                    - imageserver: 'https://example.com/imageserver'
#        - SolrJSON:
#            mime: 'application/json'
#            transformers:
#              - xslt:
#                  stylesheet: 'xslt/mods2solr.xsl'
#                  injections:
#                    - imageserver: 'https://example.com/imageserver'

  # Straight forward origin with the core format being MODS, using test data
  #- local: # ds-present internal
  #    prefix: 'local.test' # The prefix to match on incoming IDs
  #    description: 'Selected image data from the collections at the Royal Danish Library'
  #    storage: 'test' # Not production here
  #    # Different views on the material. Note that all origin has at least mods, jsonld and solrjson as views
  #    views:
  #      - raw:
  #          mime: 'text/plain'
  #          transformers:
  #            - identity:
  #      - MODS:
  #          mime: 'application/xml'
  #          transformers:
  #            - identity: # No transformation steps as mods is the core format for images-dsfl
  #      - JSON-LD:
  #          mime: 'application/json'
  #          transformers:
  #            - xslt:
  #                stylesheet: 'xslt/mods2schemaorg.xsl'
  #      - SolrJSON:
  #          mime: 'application/json'
  #          transformers:
  #            - xslt:
  #                stylesheet: 'xslt/mods2solr.xsl'

#
# Limit the number of concurrent executions of xslt transformations
transformations:
  threads: 3
  
  
security:
  # The security mode. Valid values are
  # OFFLINE: No validation of security tokens: All requests are accepted.
  # ENABLED (or no mode set): Validation of security tokens against OAuth2 server.
  mode: 'ENABLED'
  # The OAUth2 server base url, typically ending in "realms"
  # Sample: https://keycloak-keycloak.example.org/auth/realms
  baseurl: 'https://keycloak.example.com/realms'
  # Accepted realms for requests. These must be present at the OAuth2 server
  # The authentification url with the correct realm value. Does not seem the used active by code but is required when building. (TODO?)
  auth_url: ' https://api.example.com/oauth2/authorize'
  # Accepted realms for requests. These must be present at the OAuth2 server
  realms:
    - foo-bar
  public_keys:
    # The number of seconds that public keys from the realms are cached
    # Optional, -1 means forever.
    # Default is 600 (10 minutes)
    ttl_seconds: 86400

  # Client settings are used if the webapp needs to request tokens from the OAuth2 server
  client:
    # Matches OAuth2 server Client ID
    id: 'some_client'
    # Secret is used if the service needs to request a token from the OAuth2 server.
    # This typically used for calls between services, where there is a need for elevated access.
    secret: '01234567-89ab-cdef-0123-456789abcdef'
  
